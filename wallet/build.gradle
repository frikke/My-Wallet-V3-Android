apply from: rootProject.file('gradle/local/common-feature.gradle')
apply plugin: 'java-library'
apply from: 'integrationTest.gradle'
apply plugin: 'kotlinx-serialization'

group = 'info.blockchain'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task sourceJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

dependencies {
    implementation project(':balance')
    implementation project(':common:network')
    implementation project(':common:domain')
    implementation project(':common:interface')
    implementation project(':logging:domain')
    implementation project(':blockchainApi')
    implementation project(":store:caches:persistedjsonsqldelight")
    implementation project(":store:core")

    // Expose Kotlin to all parent modules
    implementation Libraries.kotlin
    // bitcoinj and web3j should both be 'implementation' but there remain a few upstack dependencies
    api (Libraries.bitcoinj) { exclude module: 'protobuf-java' }
    api (Libraries.web3j) {
        exclude module: 'jackson'
        exclude group: 'org.bouncycastle'
    }
    api Libraries.spongyCastle
    implementation Libraries.json

    // Networking
    implementation Libraries.kotlinJson
    implementation(Libraries.retrofit) { exclude module: 'okhttp' }
    implementation Libraries.retrofitRxJavaAdapter
    implementation Libraries.retrofitKotlinJsonConverter
    implementation Libraries.okHttpInterceptor

    // Utils
    implementation(Libraries.jjwt) { exclude module: 'jackson' }
    implementation Libraries.commonsIo
    implementation Libraries.commonsCli
    implementation Libraries.lambdaWorks
    api Libraries.commonsCodec
    api Libraries.commonsLang
    api Libraries.urlBuilder

    // Logging
    implementation Libraries.slf4j

    // BitcoinJ dependencies
    implementation Libraries.protobuf
    implementation Libraries.findbugs
    api Libraries.guava

    implementation Libraries.sunriver

    // Injection
    implementation Libraries.koin

    // Rx
    implementation Libraries.rxJava
    implementation Libraries.rxKotlin
    implementation Libraries.rxAndroid
    implementation Libraries.rxReplayShareKotlin
    implementation Libraries.rxjava3Coroutines

    // Testing
    testImplementation project(':testutils')
    testImplementation Libraries.junit
    testImplementation Libraries.mockito
    testImplementation Libraries.kluent
    testImplementation Libraries.koinTest
    testImplementation(Libraries.mockitoKotlin) {
        ['kotlin-stdlib', 'kotlin-reflect'].each { exclude module: it }
    }
    testImplementation Libraries.kotlinJson
    testImplementation Libraries.retrofitKotlinJsonConverter
    testImplementation Libraries.kotlinCoroutinesTest
}

test {
    testLogging {
        events 'skipped', 'failed', 'standardOut', 'standardError'
    }
}