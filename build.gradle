apply from: 'gradle/githooks.gradle'
apply from: 'scripts/tests/module_tests.gradle'

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://www.jetbrains.com/intellij-repository/releases' }
        maven { url 'https://cache-redirector.jetbrains.com/intellij-dependencies' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath Libraries.androidGradlePlugin
        classpath Libraries.googleServicesPlugin
        classpath Libraries.kotlinGradlePlugin
        classpath Libraries.kotlinSerializationPlugin
        classpath Libraries.navigationControllerSafeArgsPlugin
        classpath Libraries.firebaseCrashlyticsPlugin
        classpath Libraries.sqlDelightPlugin
        classpath Libraries.kotlin
        classpath Libraries.detekt
        classpath Libraries.kotlinGradlePlugin
        classpath 'com.android.tools.build:gradle:8.0.2'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url 'https://zendesk.jfrog.io/zendesk/repo' }
        maven { url "https://cdn.veriff.me/android/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "file:/$rootDir/localMavenRepo"}
    }
    configurations.all {
        resolutionStrategy.force Libraries.findbugs
        resolutionStrategy.force Libraries.kotlinReflect
        resolutionStrategy {
            force("org.objenesis:objenesis:3.2")
        }

        resolutionStrategy.eachDependency {
            DependencyResolveDetails dependency ->
                if (dependency.requested.group == 'org.bouncycastle') {
                    dependency.useTarget 'org.bouncycastle:bcprov-jdk15to18:1.73'
                }
        }

    }
}

subprojects {
    // Increase the error output of the compiler, to prevent a flood of databinder errors
    // masking any dagger - and, indeed, other - annotation processor failures.
    afterEvaluate {
        if (project.plugins.hasPlugin("kotlin-kapt")) {
            kapt {
                javacOptions {
                    option("-Xmaxerrs", 500)
                }
            }
        }
    }
}